import { AxiosResponse } from 'axios';
import { 
  Endpoint, 
  <%= requestOptionType %>, 
  Cafe24Datetime,
  Cafe24Boolean,
  Cafe24Date,
  Cafe24Datetime,
  Cafe24Enum,
} from 'cafe24api-client';

declare const endpoint: Endpoint;
export = endpoint;

declare module 'cafe24api-client' {

<% if (endpoint.description) { -%>
  /**
   * @description
<% for(const descline of endpoint.description.split('\n')) { -%>
   * <%= descline %>
<% } -%>
   */
<% } -%>
  export interface <%= pascalCase(endpoint.id) %> {
<%- include('/recursive-prop-decl.ejs', { 
  properties: endpoint.schema?.properties ?? [], 
  formatName: formatPropName,
  formatPropertyType: formatPropertyType,
  writeIf: writeIf,
}) -%>
  }

<% for(const method of endpoint.methods) { -%>
  export interface <%= pascalCase(method.id) %>Input {
<%- include('/recursive-prop-decl.ejs', { 
  properties: method.request.properties, 
  formatName: formatPropName,
  formatPropertyType: formatPropertyType,
  writeIf: writeIf,
}) -%>
  }

  export interface <%= pascalCase(method.id) %>Output {
<%- include('/recursive-prop-decl.ejs', { 
  properties: method.response.properties, 
  formatName: formatPropName,
  formatPropertyType: formatPropertyType,
  writeIf: writeIf,
}) -%>
  }
<% } -%>

  interface <%= clientClassName %> {
<% for(const method of endpoint.methods) { -%>
    /**
<% if (method.description) { -%>
     * @description
<% for(const descline of method.description.split('\n')) { -%>
     * <%= descline %>
<% } -%>
     *
<% } -%>
     * @see <%= docsUrl %>#<%= method.id %>
<% if (method.response.example) { -%>
     *
     * @example 응답 예시
     * ```json
<% for(const exline of formatExampleString(method.response.example)) { -%>
     * <%- exline %>
<% } -%>
     * ```
<% } -%>
     */
    <%= camelCase(method.id) %>(
      input<%= writeIf(method.request.properties.length === 0, '?') %>: <%= pascalCase(method.id) %>Input,
      options?: <%= requestOptionType %><<%- inferEffectiveOutputSchemaType(method) %>>,
    ): Promise<AxiosResponse<<%= pascalCase(method.id) %>Output>>;
<% } -%>
  }
}
