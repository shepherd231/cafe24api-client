import { AxiosResponse } from 'axios';
import { Endpoint, RequestOptions, Cafe24Datetime } from 'cafe24api-client';

declare const endpoint: Endpoint;
export = endpoint;

declare module 'cafe24api-client' {

  <% if (endpoint.description) { %>
  /**
  * @description
  <% for(const descline of endpoint.description.split('\n')) { %>
  * <%= descline %>
  <% } %>
  */
  <% } %>
  export interface <%= pascalCase(endpoint.id) %> {
    <% for(const property of endpoint.schema.properties) { %>
    <% if (property.description) { %>
    /**
    * @description
    <% for(const descline of property.description.split('\n')) { %>
    * <%= descline %>
    <% } %>
    */
    <% } %>
    <%= property.name %>: <%= property.type.replace('non-primitive', 'any').replace('primitive', 'any') %>;
    <% } %>
  }

  <% for(const method of endpoint.methods) { %>

  export interface <%= pascalCase(method.id) %>Input {
    <% for(const property of method.request.properties) { %>
    <% if (property.description) { %>
    /**
    * @description
    <% for(const descline of property.description.split('\n')) { %>
    * <%= descline %>
    <% } %>
    */
    <% } %>
    <%= property.name %>: <%= property.type.replace('non-primitive', 'any').replace('primitive', 'any') %>;
    <% } %>
  }

  export interface <%= pascalCase(method.id) %>Output {
    <% for(const property of method.response.properties) { %>
    <% if (property.description) { %>
    /**
    * @description
    <% for(const descline of property.description.split('\n')) { %>
    * <%= descline %>
    <% } %>
    */
    <% } %>
    <%= property.name %>: <%= property.type.replace('non-primitive', 'any').replace('primitive', 'any') %>;
    <% } %>
  }

  <% } %>

  interface Cafe24AdminAPIClient {
  <% for(const method of endpoint.methods) { %>
    /**
    <% if (method.description) { %>
     * @description
     <% for(const descline of method.description.split('\n')) { %>
     * <%= descline %>
     <% } %>
     *
    <% } %>
     * @see https://developers.cafe24.com/docs/api/admin/#<%= method.id %>
    <% if (method.response.example) { %>
     *
     * @example 응답 예시
     * ```json
     <% for(const exline of method.response.example.split('\n')) { %>
     * <%= exline %>
     <% } %>
     * ```
    <% } %>
     */
    <%= camelCase(method.id) %> (
      input: <%= pascalCase(method.id) %>Input,
      options?: RequestOptions<<%= pascalCase(method.id) %>Input>,
    ) => Promise<AxiosResponse<<%= pascalCase(method.id) %>Output>>;
  <% } %>
  }
}
